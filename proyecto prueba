# Traductor de números en MIPS

.data
menu_msg:.asciiz "Seleccione una opción:\n"
option_msg:.asciiz "Opción: "
tipo_num_entrada_msg:.asciiz "Tipo de número a entrar:\n1. Binario en Complemento a 2\n2. Decimal Empaquetado\n3. Base 10\n4. Octal\n5. Hexadecimal\n"
tipo_num_salida_msg:.asciiz "Tipo de número a salir:\n1. Binario en Complemento a 2\n2. Decimal Empaquetado\n3. Base 10\n4. Octal\n5. Hexadecimal\n"
num_entrada_msg:.asciiz "Ingrese el número: "
resultado_msg:.asciiz "El resultado es: "

.text
main:
    # Imprimir menú
    la $a0, menu_msg
    li $v0, 4
    syscall

loop:
    # Leer tipo de número a entrar
    la $a0, tipo_num_entrada_msg
    li $v0, 4
    syscall
    li $v0, 5
    syscall
    move $t0, $v0

    # Leer tipo de número a salir
    la $a0, tipo_num_salida_msg
    li $v0, 4
    syscall
    li $v0, 5
    syscall
    move $t1, $v0

    # Leer número a traducir
    la $a0, num_entrada_msg
    li $v0, 4
    syscall
    li $v0, 5
    syscall
    move $t2, $v0

    # Traducir número a binario en complemento a 2
    beq $t0, 1, bin_to_bin_complement
    beq $t0, 2, dec_emp_to_bin_complement
    beq $t0, 3, base10_to_bin_complement
    beq $t0, 4, octal_to_bin_complement
    beq $t0, 5, hex_to_bin_complement

bin_to_bin_complement:
    move $t3, $t2
    j translate

dec_emp_to_bin_complement:
    # implementar conversión de decimal empaquetado a binario en complemento a 2
    move $t3, $t2
    j translate

base10_to_bin_complement:
    # implementar conversión de base 10 a binario en complemento a 2
    move $t3, $t2
    j translate

octal_to_bin_complement:
    # implementar conversión de octal a binario en complemento a 2
    move $t3, $t2
    j translate

hex_to_bin_complement:
    # implementar conversión de hexadecimal a binario en complemento a 2
    move $t3, $t2
    j translate

translate:
    # Traducir binario en complemento a 2 al tipo de número deseado
    beq $t1, 1, bin_complement_to_bin
    beq $t1, 2, bin_complement_to_dec_emp
    beq $t1, 3, bin_complement_to_base10
    beq $t1, 4, bin_complement_to_octal
    beq $t1, 5, bin_complement_to_hex

bin_complement_to_bin:
    move $t3, $t3
    j print_result

bin_complement_to_dec_emp:
    # implementar conversión de binario en complemento a 2 a decimal empaquetado
    move $t3, $t3
    j print_result

bin_complement_to_base10:
    # implementar conversión de binario en complemento a 2 a base 10
    move $t3, $t3
    j print_result

bin_complement_to_octal:
    # implementar conversión de binario en complemento a 2 a octal
    move $t3, $t3
    j print_result

bin_complement_to_hex:
    # implementar conversión de binario en complemento a 2 a hexadecimal
    move $t3, $t3
    j print_result

print_result:
    # Imprimir resultado
    la $a0, resultado_msg
    li $v0, 4
    syscall
    move $a0, $t3
    li $v0, 1
    syscall
